What happens when you initialize a repository? Why do you need to do it?

	You set up the git version control mechanism inside of the directory.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Allows you to selectively choose what files you include in a commit, but take the time to compare vs. the working directory and the repository before committing.

How can you use the staging area to make sure you have one commit per logical
change?

	Ensure that after each logical change is made, all of the changed files are staged, checked, and then commmitted.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Lots of times!

How do the diagrams help you visualize the branch structure?

	Visual aids are pretty useful.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	You merge the code from the heads of the two branches together, removing anything that was explicitly deleted in one of the branches and dealing with any other code conflicts manually (e.g. code moved around).

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	Automatic merging could be faster and less likely you will forget to include something than a manual merge.
